# Binary tree yüksekliğini hesaplayan bir algoritma yazınız. Yükseklik veya derinlik,
# kök düğümden (root node) yaprak düğüme (leaf node) giden en uzun yoldaki toplam düğüm(node) sayısıdır.
# (Program, en uzun yoldaki toplam düğüm sayısını dikkate almalıdır. Örneğin, boş bir ağacın
# yüksekliği 0'dır ve yalnızca bir düğümü olan ağacın yüksekliği 1'dir.)
# Oluşturduğunuz programda aşağıdaki ağacı oluşturup yazdığınız algoritmayı test edin.
# Programınız sonuç olarak bu ağacın maximum yüksekliğini 3 olarak vermelidir.
# (İpucu: Recursive çözüm kullanabilirsiniz.)

#              15
#           /      \
#          /        \
#         10        20
#        /  \       / \
#       /    \     /   \
#      8     12   16   25


class Node():
    def __init__(self, data, left = None, right = None):
        self.data = data
        self.left = left
        self.right = right
        
def level(data):
    b = 0
    if data.left == None and data.right == None:
        return b
    elif data.right != None :
        right = level(data.right)
    elif data.left != None :
        left = level(data.left)
    return max(right,left) + 1
